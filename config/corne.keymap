/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Left half               Right half
// ─────────────────────────────────────────────
//   0  1  2  3  4  5    |     6  7  8  9 10 11
//  12 13 14 15 16 17    |    18 19 20 21 22 23
//  24 25 26 27 28 29    |    30 31 32 33 34 35
//              36 37 38 | 39 40 41

#define LEFT_KEYS 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define LEFT_THUMBS 36 37 38
#define LEFT_HAND LEFT_KEYS LEFT_THUMBS
#define RIGHT_KEYS 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define RIGHT_THUMBS 39 40 41
#define RIGHT_HAND RIGHT_KEYS RIGHT_THUMBS

#define BASE 0
#define GAME_CHAT 1
#define BASE_PLAIN 2
#define BASE_ALTER 3
#define PLAIN 4
#define ALTER 5
#define GAME 6
#define GAME_UTILS 7
#define NUMBER 8
#define SYMBOL 9
#define NAVIGATION 10
#define MEDIA 11
#define NUMPAD 12
#define MACRO 13
#define SYSUTILS 14
#define SYSTEM 15
#define BLUETOOTH 16
#define KEYSYS 17
#define SANDBOX 18

#define GCHAT GAME_CHAT
#define BPLN BASE_PLAIN
#define BALT BASE_ALTER
#define GUTLS GAME_UTILS
#define NUM NUMBER
#define SYM SYMBOL
#define NAV NAVIGATION
#define NUMP NUMPAD
#define UTILS SYSUTILS
#define SYS SYSTEM
#define BT BLUETOOTH
#define KSYS KEYSYS
#define SBX SANDBOX

#define HOLD_MS 275
#define TAP_HOLD_MS 175
#define COMBO_TAP_MS 51
#define PRIOR_MS 175
#define RELEASE_MS 1175

#define INDEX_HOLD_MS 185
#define INDEX_PRIOR_MS 91

// ZMK helpers

#define ZMK_HOLD_TAP(name, ...) \
	name { \
        compatible = "zmk,behavior-hold-tap"; \
        #binding-cells = <2>; \
		__VA_ARGS__ \
	};

#define ZMK_MOD_MORPH(name, ...) \
    name { \
        compatible = "zmk,behavior-mod-morph"; \
        #binding-cells = <0>; \
		__VA_ARGS__ \
    };

#define ZMK_STICKY_KEY(name, ...) \
    name { \
        compatible = "zmk,behavior-sticky-key"; \
        #binding-cells = <1>; \
		__VA_ARGS__ \
    };

#define ZMK_COMBO(name, ...) \
    name { \
        __VA_ARGS__ \
    };

#define ZMK_COMBOS(...) \
    combos { \
        compatible = "zmk,combos"; \
        __VA_ARGS__ \
    };

#define ZMK_CONDITIONAL_LAYER(name, ...) \
    name { \
        __VA_ARGS__ \
    };

#define ZMK_CONDITIONAL_LAYERS(...) \
    conditional_layers { \
        compatible = "zmk,conditional-layers"; \
        __VA_ARGS__ \
    };

// Custom helpers

#define HOLD_TAP(name, HOLD, TAP, ...) \
    ZMK_HOLD_TAP(name, \
        bindings = HOLD, TAP; \
        flavor = "balanced"; \
        tapping-term-ms = <HOLD_MS>; \
        __VA_ARGS__ \
    )

#define HOME_ROW_MOD(name, ...) \
    ZMK_HOLD_TAP(name, \
        bindings = <&kp>, <&kp>; \
        flavor = "balanced"; \
        hold-trigger-on-release; \
        __VA_ARGS__ \
    )

#define THUMB(name) \
    HOLD_TAP(name, <&mo>, <&kp>, \
        quick-tap-ms = <TAP_HOLD_MS>; \
    )

#define MOD_MORPH(name, TAP, MORPHED_TAP, MODS, ...) \
    ZMK_MOD_MORPH(name, \
        bindings = TAP, MORPHED_TAP; \
        mods = MODS; \
        __VA_ARGS__ \
    )

#define STICKY_KEY(name, TAP, ...) \
    ZMK_STICKY_KEY(name, \
        bindings = TAP; \
        release-after-ms = <RELEASE_MS>; \
        __VA_ARGS__ \
    )

#define STICKY_KEY_QUICK_RELEASE(name, TAP) \
    STICKY_KEY(name, TAP, \
        quick-release; \
    )

#define COMBO(name, KEY_POSITIONS, DISPATCH) \
    ZMK_COMBO(name, \
        key-positions = KEY_POSITIONS; \
        bindings = DISPATCH; \
        timeout-ms = <COMBO_TAP_MS>; \
        require-prior-idle-ms = <PRIOR_MS>; \
    )

#define CONDITIONAL_LAYER(name, IF_LAYERS, THEN_LAYERS) \
    ZMK_CONDITIONAL_LAYER(name, \
        if-layers = IF_LAYERS; \
        then-layer = THEN_LAYERS; \
    )

/ {
    macros {
        m_parens: ZMK_MACRO(macro_parentheses,
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
        )

        m_brackets: ZMK_MACRO(macro_brackets,
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
        )

        m_braces: ZMK_MACRO(macro_braces,
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
        )

        m_chevrons: ZMK_MACRO(macro_angle_brackets,
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
        )

        m_arrow_r: ZMK_MACRO(macro_arrow_right,
            bindings = <&kp MINUS &kp GREATER_THAN &kp SPACE>;
        )

        m_arrow_l: ZMK_MACRO(macro_arrow_left,
            bindings = <&kp LESS_THAN &kp MINUS &kp SPACE>;
        )

        m_fat_arrow_r: ZMK_MACRO(macro_fat_arrow_right,
            bindings = <&kp EQUAL &kp GREATER_THAN &kp SPACE>;
        )

        m_fat_arrow_l: ZMK_MACRO(macro_fat_arrow_left,
            bindings = <&kp LESS_THAN &kp EQUAL &kp SPACE>;
        )

        m_tilde_arrow_r: ZMK_MACRO(macro_tilde_arrow_right,
            bindings = <&kp TILDE &kp GREATER_THAN &kp SPACE>;
        )

        m_tilde_arrow_l: ZMK_MACRO(macro_tilde_arrow_left,
            bindings = <&kp LESS_THAN &kp TILDE &kp SPACE>;
        )

        m_pipe_r: ZMK_MACRO(macro_pipe_right,
            bindings = <&kp PIPE &kp GREATER_THAN &kp SPACE>;
        )

        m_pipe_l: ZMK_MACRO(macro_pipe_left,
            bindings = <&kp LESS_THAN &kp PIPE &kp SPACE>;
        )

        // Elixir

        m_ex_bitstring: ZMK_MACRO(macro_elixir_bitstring,
            bindings = <&kp LESS_THAN &kp LESS_THAN &kp GREATER_THAN &kp GREATER_THAN &kp LEFT &kp LEFT>;
        )

        m_ex_type_delim: ZMK_MACRO(macro_elixir_type_delimiter,
            bindings = <&kp COLON &kp COLON &kp SPACE>;
        )

        m_ex_spec: ZMK_MACRO(macro_elixir_spec,
            bindings = <&kp AT_SIGN &kp S &kp P &kp E &kp C &kp SPACE>;
        )

        m_ex_type: ZMK_MACRO(macro_elixir_type,
            bindings = <&kp AT_SIGN &kp T &kp Y &kp P &kp E &kp SPACE>;
        )

        m_ex_map: ZMK_MACRO(macro_elixir_map,
            bindings = <&kp PERCENT &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
        )

        m_ex_interp: ZMK_MACRO(macro_elixir_interpolation,
            bindings = <&kp HASH &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
        )

        m_ex_full_interp: ZMK_MACRO(macro_elixir_full_interpolation,
            bindings = <&kp DOUBLE_QUOTES &kp HASH &kp LEFT_BRACE &kp RIGHT_BRACE &kp DOUBLE_QUOTES &kp LEFT &kp LEFT>;
        )

        // Game

        m_tap_gchat_o: macro_tap_game_chat_open {
          compatible = "zmk,behavior-macro-one-param";
          #binding-cells = <1>;
          bindings = <&macro_param_1to1>, <&kp MACRO_PLACEHOLDER &to GAME_CHAT>;
        };

        m_tap_gchat_c: macro_tap_game_chat_close {
          compatible = "zmk,behavior-macro-one-param";
          #binding-cells = <1>;
          bindings = <&macro_param_1to1>, <&kp MACRO_PLACEHOLDER &to GAME>;
        };
    };
};

/ {
    behaviors {
        // Custom hold-tap

        c_lt: HOLD_TAP(custom_lt, <&mo>, <&kp>)
        lt_cw: HOLD_TAP(lt_caps_word, <&mo>, <&caps_word>)

        // Custom mod-morph

        #define MACRO_MORPH_MODS <(MOD_LSFT | MOD_RSFT)>

        mm_arrows: MOD_MORPH(mm_arrows, <&m_arrow_r>, <&m_arrow_l>, MACRO_MORPH_MODS)
        mm_fat_arrows: MOD_MORPH(mm_fat_arrows, <&m_fat_arrow_r>, <&m_fat_arrow_l>, MACRO_MORPH_MODS)
        mm_tilde_arrows: MOD_MORPH(mm_tilde_arrows, <&m_tilde_arrow_r>, <&m_tilde_arrow_l>, MACRO_MORPH_MODS)
        mm_pipes: MOD_MORPH(mm_pipes, <&m_pipe_r>, <&m_pipe_l>, MACRO_MORPH_MODS)
        mm_chevrons: MOD_MORPH(mm_chevrons, <&m_ex_bitstring>, <&m_chevrons>, MACRO_MORPH_MODS)
        mm_ex_specs: MOD_MORPH(mm_elixir_specs, <&m_ex_spec>, <&m_ex_type>, MACRO_MORPH_MODS)

        // Custom sticky key

        sk_qr: STICKY_KEY_QUICK_RELEASE(sk_quick_release, <&kp>)

        // Home row mods

        hrm_l: HOME_ROW_MOD(hrm_left,
            tapping-term-ms = <HOLD_MS>;
            require-prior-idle-ms = <PRIOR_MS>;
            hold-trigger-key-positions = <RIGHT_HAND>;
        )

        hrm_li: HOME_ROW_MOD(hrm_left_index,
            tapping-term-ms = <INDEX_HOLD_MS>;
            require-prior-idle-ms = <INDEX_PRIOR_MS>;
            hold-trigger-key-positions = <RIGHT_HAND>;
        )

        hrm_r: HOME_ROW_MOD(hrm_right,
            tapping-term-ms = <HOLD_MS>;
            require-prior-idle-ms = <PRIOR_MS>;
            hold-trigger-key-positions = <LEFT_HAND>;
        )

        hrm_ri: HOME_ROW_MOD(hrm_right_index,
            tapping-term-ms = <INDEX_HOLD_MS>;
            require-prior-idle-ms = <INDEX_PRIOR_MS>;
            hold-trigger-key-positions = <LEFT_HAND>;
        )

        // Thumbs

        thumb: THUMB(thumb)
    };
};

/ {
    ZMK_COMBOS(
        COMBO(combo_to_base_layer, <12 23>, <&to BASE>)
        COMBO(combo_to_plain_layer, <0 11>, <&to PLAIN>)
        COMBO(combo_to_game_layer, <24 35>, <&to GAME>)
    )
};

// Keymap template
//         template_layer {
//             display-name = "Temp";
// // -----------------------------------------------------------------------------------
// // |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// // |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// // |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// //                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
//             bindings = <
// &trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
// &trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
// &trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
//                                                                      &trans                 &trans                 &trans                           &trans                 &trans                 &trans
//             >;
//         };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
// -----------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |       |  Y  |  U  |  I  |  O  |  P  |  -   |
// |  CAP |  A  |  S  |  D  |  F  |  G  |       |  H  |  J  |  K  |  L  |  ;  |  '   |
// |  SFT |  Z  |  X  |  C  |  V  |  B  |       |  N  |  M  |  ,  |  .  |  /  | CTL  |
//                    | ESC | DEL | SPC |       | RET | BSP | ESC |
            bindings = <
&kp TAB                &kp Q                  &kp W                  &kp E                  &kp R                  &kp T                            &kp Y                  &kp U                  &kp I                  &kp O                  &kp P                  &kp MINUS
&lt_cw PLAIN 0         &hrm_l LGUI A          &hrm_l LALT S          &hrm_l LCTRL D         &hrm_li LSHFT F        &kp G                            &kp H                  &hrm_ri RSHFT J        &hrm_r RCTRL K         &hrm_r RALT L          &hrm_r RGUI SEMICOLON  &c_lt PLAIN SINGLE_QUOTE
&sk_qr LEFT_SHIFT      &kp Z                  &kp X                  &kp C                  &kp V                  &kp B                            &kp N                  &kp M                  &kp COMMA              &kp PERIOD             &kp SLASH              &sk_qr RIGHT_CONTROL
                                                                     &thumb NAV ESCAPE      &thumb NUMBER DELETE   &thumb ALTER SPACE               &thumb ALTER RETURN    &thumb SYM BACKSPACE   &thumb MEDIA ESCAPE
            >;
        };

        game_chat_layer {
            display-name = "G Chat";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | GAME |
//                    | ESC | ___ | ___ |       | RET | ___ | ESC |
            bindings = <
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &to GAME
                                                                     &m_tap_gchat_c ESCAPE  &trans                 &trans                           &m_tap_gchat_c RETURN  &trans                 &m_tap_gchat_c ESCAPE
            >;
        };

        base_plain_layer {
            display-name = "B Plain";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  CAP |  A  |  S  |  D  |  F  | ___ |       | ___ |  J  |  K  |  L  |  ;  |  '   |
// |  SFT | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | CTL  |
//                    | ESC | ALT | SPC |       | RET | BSP | GUI |
            bindings = <
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&kp CAPSLOCK           &kp A                  &kp S                  &kp D                  &kp F                  &trans                           &trans                 &kp J                  &kp K                  &kp L                  &kp SEMICOLON          &kp SINGLE_QUOTE
&kp LEFT_SHIFT         &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &kp RIGHT_CONTROL
                                                                     &kp ESCAPE             &kp LEFT_ALT           &kp SPACE                        &kp RETURN             &kp BACKSPACE          &kp RIGHT_GUI
            >;
        };

        base_alter_layer {
            display-name = "B Alter";
// -----------------------------------------------------------------------------------
// |  ESC | ___ | ___ | ___ | ___ | ___ |       | UND | ___ | ___ | RED | ___ | ESC  |
// |  ___ | GUI | ALT | CTL | SFT | DEL |       | BSP | INS | TAB | DEL | GUI | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&kp ESCAPE             &trans                 &trans                 &trans                 &trans                 &trans                           &kp RC(Z)              &trans                 &trans                 &kp LC(Y)              &trans                 &kp ESCAPE
&trans                 &kp LEFT_GUI           &kp LEFT_ALT           &kp LEFT_CONTROL       &kp LEFT_SHIFT         &kp DELETE                       &kp BACKSPACE          &hrm_ri RSHFT INSERT   &hrm_r RCTRL TAB       &hrm_r RALT DELETE     &kp RIGHT_GUI          &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        plain_layer {
            display-name = "Plain";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        alter_layer {
            display-name = "Alter";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        game_layer {
            display-name = "Game";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  SFT | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  CTL | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | CHAT |
//                    | ESC | ___ | ___ |       | RET | ___ | ESC |
            bindings = <
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&kp LEFT_SHIFT         &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&kp LEFT_CONTROL       &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &to GAME_CHAT
                                                                     &thumb GUTLS ESCAPE    &trans                 &trans                           &m_tap_gchat_o RETURN  &trans                 &kp ESCAPE
            >;
        };

        game_utils_layer {
            display-name = "G Utils";
// -----------------------------------------------------------------------------------
// |  F12 | F1  | F2  | F3  | F4  | F5  |       | F6  | F7  | F8  | F9  | F10 | F11  |
// |  CAP |  1  |  2  |  3  |  4  |  5  |       |  ←  |  ↓  |  ↑  |  →  | ___ | ___  |
// |  GUI |  6  |  7  |  8  |  9  |  0  |       | ___ | ___ | ___ | ___ | ___ | BASE |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&kp F12                &kp F1                 &kp F2                 &kp F3                 &kp F4                 &kp F5                           &kp F6                 &kp F7                 &kp F8                 &kp F9                 &kp F10                &kp F11
&kp CAPSLOCK           &kp N1                 &kp N2                 &kp N3                 &kp N4                 &kp N5                           &kp LEFT               &kp DOWN               &kp UP                 &kp RIGHT              &trans                 &trans
&kp LEFT_GUI           &kp N6                 &kp N7                 &kp N8                 &kp N9                 &kp N0                           &trans                 &trans                 &trans                 &trans                 &trans                 &to BASE
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        number_layer {
            display-name = "Number";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ |  7  |  8  |  9  | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ |  4  |  5  |  6  | ___ | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       |  0  |  1  |  2  |  3  | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &kp N7                 &kp N8                 &kp N9                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &kp N4                 &kp N5                 &kp N6                 &trans                 &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &kp N0                 &kp N1                 &kp N2                 &kp N3                 &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        symbol_layer {
            display-name = "Symbol";
// -----------------------------------------------------------------------------------
// |   &  |  #  |  %  |  {  |  }  |  "  |       |  `  |  -  |  +  |  /  |  *  | ___  |
// |   :  |  _  |  [  |  (  |  )  |  ]  |       | ___ |  ?  |  !  |  \  |  '  | ___  |
// |   @  |  -  |  |  |  <  |  >  |  =  |       |  ~  |  $  |  ^  |  ;  | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&kp AMPERSAND          &kp HASH               &kp PERCENT            &kp LEFT_BRACE         &kp RIGHT_BRACE        &kp DOUBLE_QUOTES                &kp GRAVE              &kp MINUS              &kp PLUS               &kp SLASH              &kp ASTERISK           &trans
&kp COLON              &kp UNDERSCORE         &kp LEFT_BRACKET       &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET                &trans                 &kp QUESTION           &kp EXCLAMATION        &kp BACKSLASH          &kp SINGLE_QUOTE       &trans
&kp AT_SIGN            &kp MINUS              &kp PIPE               &kp LESS_THAN          &kp GREATER_THAN       &kp EQUAL                        &kp TILDE              &kp DOLLAR             &kp CARET              &kp SEMICOLON          &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        navigation_layer {
            display-name = "Nav";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | T ← | ___ | ___ | T → |       | HOM | PDN | PUP | END | ___ | CMN  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       |  ←  |  ↓  |  ↑  |  →  | GUI | ___  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | W ← | W ↓ | W ↑ | W → | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &trans                 &kp LC(PAGE_UP)        &trans                 &trans                 &kp LC(PAGE_DOWN)                &kp HOME               &kp PAGE_DOWN          &kp PAGE_UP            &kp END                &trans                 &kp K_CONTEXT_MENU
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &kp LEFT               &kp DOWN               &kp UP                 &kp RIGHT              &kp RIGHT_GUI          &trans
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &kp LC(LEFT)           &kp LC(END)            &kp LC(HOME)           &kp LC(RIGHT)          &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        media_layer {
            display-name = "Media";
// -----------------------------------------------------------------------------------
// |  ___ | MUT | BDE | VDN | VUP | BIN |       | ___ | BMR | ___ | ___ | ___ | ___  |
// |  STP | PLP | PRV | RWD | FFW | NXT |       | BCK | SCH | HOM | FWD | REF | STP  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | COM | CAL | MAI | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &kp C_MUTE             &kp C_BRIGHTNESS_DEC   &kp C_VOLUME_DOWN      &kp C_VOLUME_UP        &kp C_BRIGHTNESS_INC             &trans                 &kp C_AC_BOOKMARKS     &trans                 &trans                 &trans                 &trans
&kp C_STOP             &kp C_PLAY_PAUSE       &kp C_PREVIOUS         &kp C_REWIND           &kp C_FAST_FORWARD     &kp C_NEXT                       &kp C_AC_BACK          &kp C_AC_SEARCH        &kp C_AC_HOME          &kp C_AC_FORWARD       &kp C_AC_REFRESH       &kp C_AC_STOP
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &kp C_AL_MY_COMPUTER   &kp C_AL_CALCULATOR    &kp C_AL_EMAIL         &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        numpad_layer {
            display-name = "Numpad";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | NUM |  7  |  8  |  9  |  /  |  *   |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ |  4  |  5  |  6  |  -  |  +   |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       |  0  |  1  |  2  |  3  |  .  | ENT  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &kp KP_NUMLOCK         &kp KP_N7              &kp KP_N8              &kp KP_N9              &kp KP_DIVIDE          &kp KP_MULTIPLY
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &kp KP_N4              &kp KP_N5              &kp KP_N6              &kp KP_MINUS           &kp KP_PLUS
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &kp KP_N0              &kp KP_N1              &kp KP_N2              &kp KP_N3              &kp KP_DOT             &kp KP_ENTER
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        macro_layer {
            display-name = "Macro";
// -----------------------------------------------------------------------------------
// |  ___ | #{} | %{} | {}  | ___ |"#{}"|       | ___ | ___ | ___ | ___ | ___ | ___  |
// |  ::  | ___ | []  | ()  | SFT | ___ |       | ___ | SFT | ___ | ___ | ___ | ___  |
// | @spec| <-> | <|> | <<>>| ___ | <=> |       | <~> | ___ | ___ | ___ | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &m_ex_interp           &m_ex_map              &m_braces              &trans                 &m_ex_full_interp                &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&m_ex_type_delim       &trans                 &m_brackets            &m_parens              &kp LEFT_SHIFT         &trans                           &trans                 &kp RIGHT_SHIFT        &trans                 &trans                 &trans                 &trans
&mm_ex_specs           &mm_arrows             &mm_pipes              &mm_chevrons           &trans                 &mm_fat_arrows                   &mm_tilde_arrows       &trans                 &trans                 &trans                 &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        sysutils_layer {
            display-name = "Sysutils";
// -----------------------------------------------------------------------------------
// |  F12 | F1  | F2  | F3  | F4  | F5  |       | F6  | F7  | F8  | F9  | F10 | F11  |
// |  CAP | ___ | ___ | ___ | ___ | ___ |       | ___ | PSC | ___ | ___ | SLC | PBR  |
// |  ___ | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&kp F12                &kp F1                 &kp F2                 &kp F3                 &kp F4                 &kp F5                           &kp F6                 &kp F7                 &kp F8                 &kp F9                 &kp F10                &kp F11
&kp CAPSLOCK           &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &kp PRINTSCREEN        &trans                 &trans                 &kp SCROLLLOCK         &kp PAUSE_BREAK
&trans                 &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        system_layer {
            display-name = "System";
// -----------------------------------------------------------------------------------
// |  PWR | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | PWR  |
// |  SLP | ___ | ___ | ___ | ___ | ___ |       | LOF | LOC | ___ | ___ | ___ | SLP  |
// |  RES | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | RES  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&kp C_POWER            &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &kp C_POWER
&kp C_SLEEP            &trans                 &trans                 &trans                 &trans                 &trans                           &kp C_AL_LOGOFF        &kp C_AL_LOCK          &trans                 &trans                 &trans                 &kp C_SLEEP
&kp C_RESET            &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &kp C_RESET
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        bluetooth_layer {
            display-name = "BT";
// -----------------------------------------------------------------------------------
// |  ___ | ___ | BTP | ___ | ___ | BTN |       | ___ | ___ | ___ | ___ | ___ | ___  |
// | BCLR | BT1 | BT2 | BT3 | BT4 | BT5 |       | ___ | ___ | ___ | ___ | ___ | ___  |
// | BRES | BD1 | BD2 | BD3 | BD4 | BD5 |       | ___ | ___ | ___ | ___ | ___ | ___  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&trans                 &trans                 &bt BT_PRV             &trans                 &trans                 &bt BT_NXT                       &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&bt BT_CLR             &bt BT_SEL 0           &bt BT_SEL 1           &bt BT_SEL 2           &bt BT_SEL 3           &bt BT_SEL 4                     &trans                 &trans                 &trans                 &trans                 &trans                 &trans
&bt BT_CLR_ALL         &bt BT_DISC 0          &bt BT_DISC 1          &bt BT_DISC 2          &bt BT_DISC 3          &bt BT_DISC 4                    &trans                 &trans                 &trans                 &trans                 &trans                 &trans
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        keysys_layer {
            display-name = "Keysys";
// -----------------------------------------------------------------------------------
// |  BLD | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | BLD  |
// |  ULC | ___ | GAM | PLN | BAS | ___ |       | ___ | BAS | PLN | GAM | ___ | ULC  |
// |  RES | ___ | ___ | ___ | ___ | ___ |       | ___ | ___ | ___ | ___ | ___ | RES  |
//                    | ___ | ___ | ___ |       | ___ | ___ | ___ |
            bindings = <
&bootloader            &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &bootloader
&studio_unlock         &trans                 &to GAME               &to PLAIN              &to BASE               &trans                           &trans                 &to BASE               &to PLAIN              &to GAME               &trans                 &studio_unlock
&sys_reset             &trans                 &trans                 &trans                 &trans                 &trans                           &trans                 &trans                 &trans                 &trans                 &trans                 &sys_reset
                                                                     &trans                 &trans                 &trans                           &trans                 &trans                 &trans
            >;
        };

        sandbox_layer {
            display-name = "Sandbox";
            status = "reserved";
        };
    };
};

/ {
    ZMK_CONDITIONAL_LAYERS(
        CONDITIONAL_LAYER(plain_layer, <PLAIN>, <BASE_PLAIN>)
        CONDITIONAL_LAYER(alter_layer, <ALTER>, <BASE_ALTER>)
        CONDITIONAL_LAYER(game_layer, <GAME>, <BASE_PLAIN>)
        CONDITIONAL_LAYER(number_layer, <NUMBER>, <BASE_ALTER>)
        CONDITIONAL_LAYER(symbol_layer, <SYMBOL>, <BASE_ALTER>)
        CONDITIONAL_LAYER(navigation_layer, <NAVIGATION>, <BASE_ALTER>)
        CONDITIONAL_LAYER(numpad_layer, <ALTER NUMBER>, <NUMPAD>)
        CONDITIONAL_LAYER(macro_layer, <ALTER SYMBOL>, <MACRO>)
        CONDITIONAL_LAYER(sysutils_layer, <NUMBER SYMBOL>, <SYSUTILS>)
        CONDITIONAL_LAYER(system_layer, <NAVIGATION MEDIA>, <SYSTEM>)
        CONDITIONAL_LAYER(bluetooth_layer, <ALTER SYSUTILS>, <BLUETOOTH>)
        CONDITIONAL_LAYER(keysys_layer_left, <ALTER NUMBER NAVIGATION>, <KEYSYS>)
        CONDITIONAL_LAYER(keysys_layer_right, <ALTER SYMBOL MEDIA>, <KEYSYS>)
        CONDITIONAL_LAYER(sandbox_layer, <NUMBER MEDIA>, <SANDBOX>)
    )
};
